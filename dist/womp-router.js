import{createContext as b,defineWomp as y,lazy as E,useCallback as B,useContext as k,useEffect as O,useMemo as W,useState as j,Suspense as v,html as g,useRef as H}from"womp";const w=(t,e=[],n=null,r=[])=>(t.forEach(a=>{if(a instanceof Route.class){const u=a.props,o=u.lazy?E(u.lazy):null,l={...u,parent:n,element:u.element,path:u.path,lazy:o,fallback:u.fallback,index:null,children:[]};o&&r.push(o),u.index&&(n.index=l),e.push(l),w(a.childNodes,l.children,l,r)}}),[e,r]),$=(t,e=[],n="")=>{for(const r of t){let a="";if(r.path){const u=n&&!n.endsWith("/")||!n&&!r.path.startsWith("/")?"/":"";a+=n+u+r.path,e.push([a,r])}r.children&&$(r.children,e,a)}return e},L=t=>{const e=Object.keys(t);return e.sort((n,r)=>{const a=t[n],u=t[r],o=Object.keys(a).filter(s=>s!=="segments").length,c=Object.keys(u).filter(s=>s!=="segments").length-o;if(c===0){let s=n.split("/"),h=r.split("/");const m=h.length-s.length;if(m!==0)return m;let f=0,i=0;for(let p=0;p<s.length;p++){const C=s[p],x=h[p];if(C.startsWith(":")||f++,x.startsWith(":")||i++,C.startsWith(":")||x.startsWith(":")||C.startsWith("*")||x.startsWith("*"))break}return i-f}return c}),t[e[0]]},z=(t,e)=>{const n={exact:null,parametric:{},fallbacks:{}},r=e!=="/"&&e.endsWith("/")?e.substring(0,e.length-1):e;for(const c of t){const[s,h]=c,m=s.endsWith("*");if(!m&&s.split("/").length!==r.split("/").length)continue;if(s===r){n.exact=h;break}if(!s.includes(":")&&!s.includes("*"))continue;const f=s.split("/");let i="";const p=[];for(let d=1;d<f.length;d++){const R=f[d];i+="\\/",R.startsWith(":")?(d===f.length-1?i+="(.*)":i+="(.*?)",p.push(R.substring(1))):R==="*"?(i+="(.*)",p.push("segments")):i+=R}const x=new RegExp(i,"g").exec(r);if(x){const d={};for(let R=1;R<x.length;R++)d[p[R-1]]=x[R];m?n.fallbacks[s]=[h,d]:n.parametric[s]=[h,d]}}const a=Object.keys(n.parametric),u=Object.keys(n.fallbacks);let o=[null,null];n.exact?o=[n.exact,{}]:a.length?o=L(n.parametric):u.length&&(o=L(n.fallbacks));const l=o[0].redirect||o[0].index?.redirect;if(l){const c=N(e,l);history.replaceState({},void 0,c),o=z(t,c)}return o},N=(t,e)=>e.startsWith("/")?e:t+(t.endsWith("/")?"":"/")+e,A=t=>t?g`
		<${S.Provider} value=${{...t}}>
			${t.lazy?t.fallback?g`
							<${v} fallback=${t.fallback}>
								<${t.lazy} />
							</${v}>
						`:g`<${t.lazy} />`:t.element}
		</${S.Provider}>
	`:null,P=b({route:null,params:null,currentRoute:null,setNewRoute:null});export function Routes({children:t}){const[e,n]=j(window.location.pathname),r=H({route:null,params:null,currentRoute:null,setNewRoute:null}),a=B((m,f=!0)=>{n(i=>{const p=N(i,m);return f&&i!==p&&(history.pushState({},null,p),r.current.currentRoute=p),p})});r.current.currentRoute=e,r.current.setNewRoute=a;const u=W(()=>{const[m,f]=w(t.nodes);return window.requestIdleCallback&&f.forEach(i=>{requestIdleCallback(i)}),m},[]),o=W(()=>$(u),[]);O(()=>{window.addEventListener("popstate",()=>{a(window.location.pathname,!1)})},[]);const[l,c]=z(o,e);if(r.current.params=c,!l)return g`<div>Not found!</div>`;//! Make custom component. Allow to override it.
let s=l,h=null;for(s.nextRoute=h;s.parent;)h=s,s=s.parent,s.nextRoute=h;return r.current.route=s,g`<${P.Provider} value=${r.current}>${A(s)}</${P.Provider}>`}y(Routes,{name:"womp-routes"});const S=b(null);export function Route({route:t}){return g``}y(Route,{name:"womp-route"});export function ChildRoute(){const t=k(S);let e=null;if(t){const n=t.nextRoute;n?e=n:t.index&&(e=t.index)}return A(e)}y(ChildRoute,{name:"womp-child-route"});export function Link({to:t,children:e}){const n=useNavigate(),r=k(S);let a=t;if(!a.startsWith("/")){let o=r;for(;o;){const l=o.path;if(l){const c=l.endsWith("/")?"":"/";a=o.path+c+a}o=o.parent}}return g`<a href=${a} @click=${o=>{o.preventDefault(),n(a)}}>${e}</a> `}Link.css=":host { display: inline-block; }",y(Link,{name:"womp-link"});export function NavLink({to:t,children:e}){const n=useNavigate(),r=useCurrentRoute(),a=k(S);let u=t;if(!u.startsWith("/")){let c=a;for(;c;){const s=c.path;if(s){const h=s.endsWith("/")?"":"/";u=c.path+h+u}c=c.parent}}return g`<a class=${r===u&&"active"} href=${u} @click=${c=>{c.preventDefault(),n(u)}}>${e}</a>`}NavLink.css=":host { display: inline-block; }",y(NavLink,{name:"womp-nav-link"});export const useParams=()=>k(P).params,useNavigate=()=>k(P).setNewRoute,useCurrentRoute=()=>k(P).currentRoute;
