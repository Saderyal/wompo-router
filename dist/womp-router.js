import{createContext as w,defineWomp as P,lazy as H,useCallback as O,useContext as y,useEffect as j,useMemo as S,useState as I,Suspense as W,html as x}from"womp";const v=(t,e=[],n=null,s=[])=>(t.forEach(a=>{if(a instanceof Route.class){const o=a.props,c=o.lazy?H(o.lazy):null,h={...o,parent:n,element:o.element,path:o.path,lazy:c,fallback:o.fallback,index:null,children:[]};c&&s.push(c),o.index&&(n.index=h),e.push(h),v(a.childNodes,h.children,h,s)}}),[e,s]),$=(t,e=[],n="")=>{for(const s of t){let a="";if(s.path){const o=n&&!n.endsWith("/")||!n&&!s.path.startsWith("/")?"/":"";a+=n+o+s.path,e.push([a,s])}s.children&&$(s.children,e,a)}return e},L=t=>{const e=Object.keys(t);return e.sort((n,s)=>{const a=t[n],o=t[s],c=Object.keys(a).filter(r=>r!=="segments").length,u=Object.keys(o).filter(r=>r!=="segments").length-c;if(u===0){let r=n.split("/"),f=s.split("/");const d=f.length-r.length;if(d!==0)return d;let p=0,i=0;for(let l=0;l<r.length;l++){const k=r[l],m=f[l];if(k.startsWith(":")||p++,m.startsWith(":")||i++,k.startsWith(":")||m.startsWith(":")||k.startsWith("*")||m.startsWith("*"))break}return i-p}return u}),t[e[0]]},z=(t,e)=>{const n={exact:null,parametric:{},fallbacks:{}},s=e!=="/"&&e.endsWith("/")?e.substring(0,e.length-1):e;for(const u of t){const[r,f]=u,d=r.endsWith("*");if(!d&&r.split("/").length!==s.split("/").length)continue;if(r===s){n.exact=f;break}if(!r.includes(":")&&!r.includes("*"))continue;const p=r.split("/");let i="";const l=[];for(let g=1;g<p.length;g++){const R=p[g];i+="\\/",R.startsWith(":")?(g===p.length-1?i+="(.*)":i+="(.*?)",l.push(R.substring(1))):R==="*"?(i+="(.*)",l.push("segments")):i+=R}const m=new RegExp(i,"g").exec(s);if(m){const g={};for(let R=1;R<m.length;R++)g[l[R-1]]=m[R];d?n.fallbacks[r]=[f,g]:n.parametric[r]=[f,g]}}const a=Object.keys(n.parametric),o=Object.keys(n.fallbacks);let c=[null,null];n.exact?c=[n.exact,{}]:a.length?c=L(n.parametric):o.length&&(c=L(n.fallbacks));const h=c[0]?.redirect||c[0]?.index?.redirect;if(h){const u=N(e,h);history.replaceState({},void 0,u),c=z(t,u)}return c},N=(t,e)=>e.startsWith("/")?e:t+(t.endsWith("/")||e.startsWith("#")?"":"/")+e,E=t=>t?x`
		<${C.Provider} value=${{...t}}>
			${t.lazy?t.fallback?x`
							<${W} fallback=${t.fallback}>
								<${t.lazy} />
							</${W}>
						`:x`<${t.lazy} />`:t.element}
		</${C.Provider}>
	`:null,b=w({params:null,hash:null,currentRoute:null,setNewRoute:null}),B=t=>{if(t){const e=document.getElementById(t),n=e.getBoundingClientRect().top+window.scrollY+60;e&&e.scrollIntoView({block:"start",behavior:"smooth"})}};export function Routes({children:t}){const[e,n]=I(window.location.pathname),s=O((d,p=!0)=>{n(i=>{const l=N(i,d),[k,m]=l.split("#");return p&&i!==l&&(history.pushState({},null,l),m||window.scrollTo(0,0)),B(m),k})}),a=S(()=>{const[d,p]=v(t.nodes);return window.requestIdleCallback?p.forEach(i=>{requestIdleCallback(i)}):setTimeout(()=>{p.forEach(i=>{i()})},4e3),d},[]),o=S(()=>$(a),[]);j(()=>{window.addEventListener("popstate",()=>{s(window.location.pathname,!1)}),setTimeout(()=>{B(u.hash)},200)},[]);const[c,h]=z(o,e),u=S(()=>({hash:window.location.hash.split("#")[1],params:h,currentRoute:e,setNewRoute:s}),[e]);let r=c??{notFound:!0},f=null;for(r.nextRoute=f;r.parent;)f=r,r=r.parent,r.nextRoute=f;return x`<${b.Provider} value=${u}>
		${r.notFound?x`<div>Not found!</div>`:E(r)}
	</${b.Provider}>`}P(Routes,{name:"womp-routes"});const C=w(null);export function Route({route:t}){return x``}P(Route,{name:"womp-route"});export function ChildRoute(){const t=y(C);let e=null;if(t){const n=t.nextRoute;n?e=n:t.index&&(e=t.index)}return E(e)}P(ChildRoute,{name:"womp-child-route"});const A=(t,e)=>{let n=t;if(!n.startsWith("/")&&!n.startsWith("#")){let s=e;for(;s;){const a=s.path;if(a){const o=a.endsWith("/")?"":"/";n=s.path+o+n}s=s.parent}}return n};export function Link({to:t,children:e}){const n=useNavigate(),s=y(C),a=A(t,s);return x`<a href=${a} @click=${c=>{c.preventDefault(),n(a)}}>${e}</a> `}Link.css=":host { display: inline-block; }",P(Link,{name:"womp-link"});export function NavLink({to:t,children:e}){const n=useNavigate(),s=useCurrentRoute(),a=y(C),o=A(t,a);return x`<a class=${s===o&&"active"} href=${o} @click=${u=>{u.preventDefault(),n(o)}}>${e}</a>`}NavLink.css=":host { display: inline-block; }",P(NavLink,{name:"womp-nav-link"});export const useParams=()=>y(b).params,useNavigate=()=>y(b).setNewRoute,useCurrentRoute=()=>y(b).currentRoute;
